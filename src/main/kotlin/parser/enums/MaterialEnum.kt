package io.arthurkun.parser.enums

enum class MaterialEnum {
	Proof,
	Bone,
	Fang,
	Dust,
	Chain,
	Stinger,
	Fluid,
	Stake,
	Gunpowder,
	AmnestyBell,
	CeremonialBlade,
	UnforgettableAshes,
	ObsidianEdge,
	VestigeOfMadness,

	Seed,
	GhostLantern,
	OctupletCrystal,
	SerpentJewel,
	Feather,
	Gear,
	Page,
	HomunculusBaby,
	Horseshoe,
	Medal,
	ShellOfReminiscence,
	Magatama,
	EternalIce,
	GiantRing,
	AuroraSteel,
	SoundlessBell,
	Arrowhead,
	Tiara,
	DivineSpiritParticle,
	RainbowThreadBall,
	FantasyScales,
	Sunscale,
	Converger,
	FlowerOfTheEnd,
	UniversalCube,
	DivineLens,

	Claw,
	Heart,
	DragonScale,
	SpiritRoot,
	YoungHorn,
	TearStone,
	Grease,
	LampOfEvilSealing,
	Scarab,
	Lanugo,
	Gallstone,
	MysteriousWine,
	ReactorCore,
	TsukumoMirror,
	EggOfTruth,
	StarShard,
	FruitOfEternity,
	DemonFlameLantern,
	GoldenCauldron,
	MoonlightNucleus,
	HolyWaterOfDestiny,

	MonumentSaber,
	MonumentArcher,
	MonumentLancer,
	MonumentRider,
	MonumentCaster,
	MonumentAssassin,
	MonumentBerserker,

	PieceSaber,
	PieceArcher,
	PieceLancer,
	PieceRider,
	PieceCaster,
	PieceAssassin,
	PieceBerserker,

	SkillGoldSaber,
	SkillGoldArcher,
	SkillGoldLancer,
	SkillGoldRider,
	SkillGoldCaster,
	SkillGoldAssassin,
	SkillGoldBerserker,

	SkillRedSaber,
	SkillRedArcher,
	SkillRedLancer,
	SkillRedRider,
	SkillRedCaster,
	SkillRedAssassin,
	SkillRedBerserker,

	SkillBlueSaber,
	SkillBlueArcher,
	SkillBlueLancer,
	SkillBlueRider,
	SkillBlueCaster,
	SkillBlueAssassin,
	SkillBlueBerserker,
}

private val copperMaterials =
	listOf(
		MaterialEnum.Proof,
		MaterialEnum.Bone,
		MaterialEnum.Fang,
		MaterialEnum.Dust,
		MaterialEnum.Chain,
		MaterialEnum.Stinger,
		MaterialEnum.Fluid,
		MaterialEnum.Stake,
		MaterialEnum.Gunpowder,
		MaterialEnum.AmnestyBell,
		MaterialEnum.CeremonialBlade,
		MaterialEnum.UnforgettableAshes,
		MaterialEnum.ObsidianEdge,
		MaterialEnum.VestigeOfMadness,
		MaterialEnum.SkillBlueSaber,
		MaterialEnum.SkillBlueArcher,
		MaterialEnum.SkillBlueLancer,
		MaterialEnum.SkillBlueRider,
		MaterialEnum.SkillBlueCaster,
		MaterialEnum.SkillBlueAssassin,
		MaterialEnum.SkillBlueBerserker,
	)

private val silverMaterials =
	listOf(
		MaterialEnum.Seed,
		MaterialEnum.GhostLantern,
		MaterialEnum.OctupletCrystal,
		MaterialEnum.SerpentJewel,
		MaterialEnum.Feather,
		MaterialEnum.Gear,
		MaterialEnum.Page,
		MaterialEnum.HomunculusBaby,
		MaterialEnum.Horseshoe,
		MaterialEnum.Medal,
		MaterialEnum.ShellOfReminiscence,
		MaterialEnum.Magatama,
		MaterialEnum.EternalIce,
		MaterialEnum.GiantRing,
		MaterialEnum.AuroraSteel,
		MaterialEnum.SoundlessBell,
		MaterialEnum.Arrowhead,
		MaterialEnum.Tiara,
		MaterialEnum.DivineSpiritParticle,
		MaterialEnum.RainbowThreadBall,
		MaterialEnum.FantasyScales,
		MaterialEnum.Sunscale,
		MaterialEnum.Converger,
		MaterialEnum.FlowerOfTheEnd,
		MaterialEnum.UniversalCube,
		MaterialEnum.DivineLens,
		MaterialEnum.PieceSaber,
		MaterialEnum.PieceArcher,
		MaterialEnum.PieceLancer,
		MaterialEnum.PieceRider,
		MaterialEnum.PieceCaster,
		MaterialEnum.PieceAssassin,
		MaterialEnum.PieceBerserker,
		MaterialEnum.SkillRedSaber,
		MaterialEnum.SkillRedArcher,
		MaterialEnum.SkillRedLancer,
		MaterialEnum.SkillRedRider,
		MaterialEnum.SkillRedCaster,
		MaterialEnum.SkillRedAssassin,
		MaterialEnum.SkillRedBerserker,
	)

fun MaterialEnum.rarity(): MaterialRarity = when (this) {
	in copperMaterials -> MaterialRarity.Copper
	in silverMaterials -> MaterialRarity.Silver

	else -> MaterialRarity.Gold
}
